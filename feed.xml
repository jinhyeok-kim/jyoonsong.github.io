<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko_KR"><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml"/><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="ko_KR"/><updated>2018-02-09T13:50:48+09:00</updated><id>http://localhost:4000/</id><title type="html">재윤 블로그</title><subtitle>개발/디자인에 관심 많은 대학생이 공부한 것, 생각한 것, 경험한 것들을 기록하고 정리하는 공간입니다.</subtitle><author><name>JaeYoon Song</name></author><entry><title type="html">Git 에러 CRLF will be replaced by LF (혹은 반대) 핸들링하는 방법</title><link href="http://localhost:4000/2018/01/git-crlf.html" rel="alternate" type="text/html" title="Git 에러 CRLF will be replaced by LF (혹은 반대) 핸들링하는 방법"/><published>2018-01-03T12:15:30+09:00</published><updated>2018-01-03T12:15:30+09:00</updated><id>http://localhost:4000/2018/01/git-crlf</id><content type="html" xml:base="http://localhost:4000/2018/01/git-crlf.html">&lt;p&gt;&lt;strong&gt;맥/리눅스 이용 개발자와 윈도우 개발자가 협업할 때&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;왜 발생할까?&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;터미널에 &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; 명령어를 입력했는데 다음과 같은 에러가 뜨는 경우가 있다:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;warning: CRLF will be replaced by LF &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;some/file.file. The file will have its original line endings &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;your working directory. &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이는 맥 또는 리눅스를 쓰는 개발자와 윈도우 쓰는 개발자가 Git으로 협업할 때 발생하는 &lt;strong&gt;Whitespace&lt;/strong&gt; 에러다. 유닉스 시스템에서는 한 줄의 끝이 &lt;strong&gt;LF(Line Feed)&lt;/strong&gt;로 이루어지는 반면, 윈도우에서는 줄 하나가 &lt;strong&gt;CR(Carriage Return)&lt;/strong&gt;와 &lt;strong&gt;LF(Line Feed)&lt;/strong&gt;, 즉 &lt;strong&gt;CRLF&lt;/strong&gt;로 이루어지기 때문이다. 따라서 어느 한 쪽을 선택할지 Git에게 혼란이 온 것이다.&lt;/p&gt; &lt;p&gt;유닉스 OS을 쓰고 있다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;CRLF will be replaced by LF in…&lt;/code&gt; 에러 메시지가 뜰 것이고, 윈도우를 사용하고 있다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;LF will be replaced by CRLF in…&lt;/code&gt; 에러 메시지가 뜰 것이다.&lt;/p&gt; &lt;p&gt;둘 중 뭐든간에 해결 방법은 유사같다. Git은 똑똑해서 이를 자동 변환해주는 &lt;code class=&quot;highlighter-rouge&quot;&gt;core.autocrlf&lt;/code&gt; 라는 기능을 가지고 있는데, 이 기능을 켜주기만 하면 된다.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;해답은 &lt;code class=&quot;highlighter-rouge&quot;&gt;core.autocrlf&lt;/code&gt; 를 켜는 것!&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;이 기능은 개발자가 git에 코드를 추가했을 때 (예컨대 커밋할 때)에는 CRLF를 LF로 변환해주고, git의 코드를 개발자가 조회할 때 (예컨대 clone한다거나 할 때)에는 LF를 CRLF로 변환해준다.&lt;/p&gt; &lt;p&gt;그러므로 &lt;strong&gt;윈도우 사용자&lt;/strong&gt;의 경우 이러한 변환이 항상 실행되도록 다음과 같은 명령어를 입력한다. 물론 시스템 전체가 아닌 해당 프로젝트에만 적용하고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;—global&lt;/code&gt; 을 빼주면 된다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.autocrlf &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;리눅스나 맥을 사용&lt;/strong&gt;하고 있는 경우, 조회할 때 LF를 CRLF를 변환하는 것은 원하지 않을 것이다. 따라서 뒤에 &lt;code class=&quot;highlighter-rouge&quot;&gt;input&lt;/code&gt;이라는 명령어를 추가해줌으로써 단방향으로만 변환이 이루어지도록 설정한다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.autocrlf &lt;span class=&quot;nb&quot;&gt;true &lt;/span&gt;input &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;혹은 이러한 변환 기능을 원하지 않고, 그냥 &lt;strong&gt;에러 메시지 끄고 알아서 작업하고 싶은 경우&lt;/strong&gt;에는 아래 명령어로 경고메시지 기능인 &lt;code class=&quot;highlighter-rouge&quot;&gt;core.safecrlf&lt;/code&gt;를 꺼주면 된다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.safecrlf &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h4 id=&quot;ref&quot;&gt;Ref&lt;/h4&gt; &lt;p&gt;Git Documentation - &lt;a href=&quot;https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#Formatting-and-Whitespace&quot;&gt;https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#Formatting-and-Whitespace&lt;/a&gt;&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="Git"/><summary type="html">맥/리눅스 이용 개발자와 윈도우 개발자가 협업할 때</summary></entry><entry><title type="html">지킬(Jekyll) 포스팅에 이미지 첨부하는 방법 총체적 정리</title><link href="http://localhost:4000/2017/12/jekyll-image.html" rel="alternate" type="text/html" title="지킬(Jekyll) 포스팅에 이미지 첨부하는 방법 총체적 정리"/><published>2017-12-30T12:15:30+09:00</published><updated>2017-12-30T12:15:30+09:00</updated><id>http://localhost:4000/2017/12/jekyll-image</id><content type="html" xml:base="http://localhost:4000/2017/12/jekyll-image.html">&lt;h4&gt;&lt;b&gt;경로 설정하기&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;지킬에서 Path를 찾아나갈 때에는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;에서 정의된 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;이라는 변수가 사용된다. 이를 위해 아래 이미지에서 알 수 있듯이 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;은 도메인 root path, &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;은 subpath를 말한다. 후자는 사이트가 도메인의 root가 아닌 subpath에 호스팅된 경우에 유용하게 사용된다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://byparker.com/img/what-is-a-baseurl.jpg&quot; alt=&quot;Jekyll의 이미지 Path&quot; /&gt;&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;//_config.yml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;http://blog.jaeyoon.io&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;my-baseurl&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;지킬은 기본적으로 YAML Front Matter을 가진 파일이 아니면 Liquid를 프로세싱하지 않는데, 이 YAML Front Matter은 기본적으로 아래 두 줄로 표시된다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;따라서 이 두 줄이 추가되지 않은 파일에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;{{ site.baseurl }}&lt;/code&gt;과 같이 위에서 정의한 리퀴드 변수를 사용할 수 없다.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;이미지 첨부하기&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;1. HTML 문법으로&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Absolute URL (절대 경로) - &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;을 앞에 붙여준다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{{ &quot;/assets/img/image.png&quot; | absolute_url }}'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'absolute'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- result : http://blog.jaeyoon.io/my-baseurl/assets/img/image.png --&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Relative URL (상대 경로) - &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;을 앞에 붙여준다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{{ &quot;/assets/img/image.png&quot; | relative_url }}'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'relative'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- result : /my-baseurl/assets/img/image.png --&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;2. 마크다운(MD) 문법으로&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Jekyll이 사용하는 마크다운-HTML 컨버터인 &lt;code class=&quot;highlighter-rouge&quot;&gt;kramdown&lt;/code&gt; 하에서는 아래 네 가지 방식이 모두 허용된다.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image Alt 텍스트&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;{{site.url}}/assets/img/image.png&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image Alt 텍스트&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;http://blog.jaeyoon.io/assets/img/image.png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image Alt 텍스트&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;{{&quot;/assets/img/image.png&quot;|&lt;/span&gt; absolute_url}}) &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image Alt 텍스트&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/assets/img/image.png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;클래스명, alt값 등은 &lt;code class=&quot;highlighter-rouge&quot;&gt;{:property = &quot;value&quot;}&lt;/code&gt;형태로 붙여주면 된다.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image Alt 텍스트&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/assets/img/image.png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{:class=&quot;img-responsive&quot;} &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;3. SASS/SCSS 파일 안에서 이미지 불러오기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;YAML Front Matter 블록이 정의된 &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt; 파일에서 리퀴드 문법으로 사이트 URL 변수를 정의해준다.&lt;/p&gt; &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.scss &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$baseurl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{{ site.baseurl }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;custom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 임포트되는 기타 SCSS파일들에서는 이 변수를 사용하여 작업하면 된다.&lt;/p&gt; &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// custom.scss &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$baseurl&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/assets/img/image.png&quot;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;4. defaults 세팅으로 불러오기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;에서 마치 디폴트 레이아웃이 정의되어 있는 것처럼, 같은 방식으로 디폴트 이미지 경로를 지정해준다&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;assets/img&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이에 따라 지킬이 생성할 사이트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/img&lt;/code&gt; 경로의 static한 이미지 파일들을 불러올 것이다. 즉 해당 경로의 이미지 파일들은 모두 &lt;code class=&quot;highlighter-rouge&quot;&gt;image: true&lt;/code&gt;라는 YML Front Matter를 가지게 되는 것이다. 이러한 설정을 하에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;background-image&lt;/code&gt;를 불러올 때에도 따로 변수를 생성할 필요없이 바로 경로를 적어줘도 된다.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{ % assign image_files = site.static_files | where: &quot;image&quot;, true %} { % for myimage in image_files %} {{ myimage.path }} { % endfor %} &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위 코드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/img&lt;/code&gt;의 모든 파일이 출력되는 결과를 가져온다&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;이미지 캡션 달기&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;1. HTML figure 태그&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;포스팅 MD 파일 안에 HTML 태그를 포함시켜도 상관 없기 때문에 귀찮은 방법이지만 일일이 figure 태그로 마크업하는 방법이 있다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;figure&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{{ &quot;/assets/img/image.png&quot; | absolute_url }}'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'absolute'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;figcaption&amp;gt;&lt;/span&gt;여기에 캡션을 작성합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;2. Custom CSS&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;스타일시트를 커스터마이즈하여 마크다운 문법으로 작성한 결과에 캡션 스타일을 먹이도록 할 수 있다. 예컨대 아래 코드에서는 img 태그 바로 뒤에 나오는 em 태그에만 캡션 스타일을 적용시킨다. em태그 말고도 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; 로 사용하는 blockquote 태그, 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;{:.image-caption}&lt;/code&gt; 로 클래스를 정의해서 사용해도 된다.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image Alt 텍스트&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;{{&quot;/assets/img/image.png&quot;|&lt;/span&gt; absolute_url}}) &lt;span class=&quot;ge&quot;&gt;*여기에 캡션을 작성합니다.*&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위 마크다운은 &lt;code class=&quot;highlighter-rouge&quot;&gt;kramdown&lt;/code&gt;에 의해 아래와 같은 HTML로 변환된다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://blog.jaeyoon.io/assets/img/image.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Image Alt 텍스트&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&amp;gt;&lt;/span&gt;여기에 캡션을 작성합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;따라서 CSS는 아래와 같이 커스터마이징해주면 된다. 이 경우, em과 img 태그가 같은 p 태그를 부모로 가지도록 두 태그 사이에 빈 줄이 생기지 않도록 주의해야 한다.&lt;/p&gt; &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;.8rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$grey-color-light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;3. 마크다운 Table&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;표를 이용해도 깔끔한 뷰를 만들 수 있다.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image Alt 텍스트&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;{{&quot;/assets/img/image.png&quot;|&lt;/span&gt; absolute_url}}) | |:--:| | 여기에 캡션을 작성합니다. | &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;https://dummyimage.com/600x300/ffd9e5/ffffff&amp;amp;text=like+this+yo&quot; alt=&quot;Image Alt 텍스트&quot; /&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td style=&quot;text-align: center&quot;&gt;여기에 캡션을 작성합니다.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;strong&gt;4. _includes에서 Partial View 만들기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Liquid가 제공하는 기능을 가장 full로 이용하는 방법인데, &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; 폴더에 새로운 html 조각 파일을 만들고, 이를 가져다가 사용하는 것이다. html 조각 파일에는 table 태그를 사용할 수도 있고, figure 태그로 마크업을 할 수도 있다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- _includes/image.html --&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;figure&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{{ include.url }}'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{{ include.alt }}'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;figcaption&amp;gt;&lt;/span&gt;{{ include.description }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;실제 포스팅을 작성하는 md 파일에서는 아래와 같이 사용하면 된다.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% include image.html url='{{&quot;/assets/img/logo.png&quot;| absolute_url}}' description='여기에 캡션을 작성합니다.' alt='Image Alt 텍스트' %} &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;Ref&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;jekyll 다큐멘테이션 - http://jekyllrb.com &lt;br /&gt; StackOverFlow - https://stackoverflow.com&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="블로그"/><category term="HTML"/><category term="Jekyll"/><category term="Markdown"/><summary type="html">경로 설정하기</summary></entry><entry><title type="html">jQuery? Vanilla JS? 무엇이 답인가</title><link href="http://localhost:4000/2017/12/jquery-free.html" rel="alternate" type="text/html" title="jQuery? Vanilla JS? 무엇이 답인가"/><published>2017-12-24T21:15:30+09:00</published><updated>2017-12-24T21:15:30+09:00</updated><id>http://localhost:4000/2017/12/jquery-free</id><content type="html" xml:base="http://localhost:4000/2017/12/jquery-free.html">&lt;p&gt;&lt;strong&gt;끊임없는 변화 속에서 중요한 것은 변하지 않는 것&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;jQuery의 전성기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;2010년대 초반은 jQuery의 전성기였다. $는 간편했고, AJAX와 애니메이션을 심플하게 만들어 주었으며, 수많은 플러그인이 jQuery 기반으로 나왔다. 이러한 간편함과 플러그인 커뮤니티 덕분에 jQuery는 오랜 시간 큰 사랑을 받았다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;스마트폰의 대두&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;그러나 이제 많은 사람들이 jQuery Free를 외치고 있다. 이는 스마트폰의 시대가 열리면서 본격적이 되었다. 휴대폰에 탑재된 느리고 열등한 CPU와 적은 메모리, 그리고 작은 데이터 대역폭(bandwidth)은 jQuery를 사용하기에 적절하지 못한 환경이었기 때문이다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;모듈화의 시대&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;한 마디로 jQuery는 너무 무겁다. jQuery의 내부적 요소들을 살펴보면, 불필요한 군살들이 너무 많다. 모듈화의 시대에서는 이제 jQuery의 부분부분을 조각내어 단일 목적의 lightweight 라이브러리들이 만들어지고 있다. 사용자의 3G/4G 데이터를 잡아먹지 않도록 말이다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;JavaScript Revolution&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;또한 node.js의 영향도 크다. node.js의 등장과 함께 JS는 더이상 단지 ‘브라우저의 언어’라는 명목에서 벗어나 서버 사이드 언어로 발전했다. 이와 동시에 jQuery는 오로지 client-side에서 DOM을 조작하는 라이브러리라는 점에서 가치가 떨어진다. 이러한 것들은 서버사이드로 전이 가능한 것이 아니기 때문이다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;새로운 프론트엔드 프레임워크/라이브러리&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;결정적으로 현재 React, Angular, Vue처럼 더 직관적이고 최신 기술의 프론트엔드 프레임워크/라이브러리가 등장하면서 jQuery의 인기는 절감되었다.&lt;/p&gt; &lt;p&gt;애니메이션의 경우, GSAP(GreenSock Animation Platform)이라는 애니메이션에만 집중한 라이브러리가 훨씬 더 빠른 성능을 자랑하고 있다. 아래는 GreenSock에서 직접 올린 각종 애니메이션 라이브러리 속도 비교 코드이다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;srfxA&quot; data-default-tab=&quot;js,result&quot; data-user=&quot;GreenSock&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Speed Test: GSAP, CSS Transitions (Zepto), jQuery 3, anime, WAAPI&quot; class=&quot;codepen&quot;&gt;GSAP, Zepto, jQuery, Anime, WAAPI 속도 비교 &lt;a href=&quot;https://codepen.io/GreenSock/pen/srfxA/&quot;&gt;Speed Test: GSAP, CSS Transitions (Zepto), jQuery 3, anime, WAAPI&lt;/a&gt; by GreenSock (&lt;a href=&quot;https://codepen.io/GreenSock&quot;&gt;@GreenSock&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt; &lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vanilla JS&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;jQuery 플러그인들 중 종종 jQuery를 버리고 Vanilla JS 버전을 업데이트하는 경우가 있다. 새로운 라이브러리인가 생각할 수 있지만 &lt;a href=&quot;http://vanilla-js.com&quot;&gt;Vanilla-JS&lt;/a&gt; 웹사이트를 보면 알 수 있듯이 그냥 순수 JavaScript를 일컫는 말이다. Vanilla는 비격식으로 &lt;em&gt;평범한, 특별할 것 없는&lt;/em&gt; 이라는 뜻을 가진 형용사이다. 위 웹사이트에 가서 파일을 다운로드받으면, 0byte에 바로 코딩을 시작하라는 주석 뿐이다. JavaScript 코딩에 있어 프레임워크/라이브러리가 필요하다는 의견을 비꼬기 위해 만들어진 개그 사이트인 것이다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;jQuery를 쓰지 못하면 개발 생산성이 떨어지는가?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;querySelector&lt;/code&gt; 쓴다고 효율성이 뚝 떨어지는 건 아니라고 본다. jQuery 선택자는 항상 jQuery Object(마치 array처럼 사용 가능)를 반환하는데 index를 매번 붙여주는 게 가끔은 불편한 경우도 있다. 또한 &lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You might not need jQuery&lt;/a&gt;에서 볼 수 있듯이 AJAX를 JS로 직접 구현하는 등의 작업도 아주 복잡한 일은 아니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;jQuery Free가 답인가?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;물론 랜딩페이지처럼 간단한 one page application에 있어서는 여전히 jQuery가 강자이다. 또 플러그인 생태계를 생각하면 jQuery Free란 굉장히 아쉬운 아이디어이다. 하지만 테크 업계는 빠르게 변화하고, 변화를 따라가기 위해서는 기존 툴을 버려야 할 때가 온다.&lt;/p&gt; &lt;p&gt;​&lt;/p&gt; &lt;p&gt;이 글은 jQuery를 비난하고, React나 Angular의 중요성을 옹호하고자 한 것이 아니다. 나의 결론은 개발자가 오로지 한 가지 언어와 프레임워크로만 개발을 지속하는 것은 거의 불가능에 가까운 일이므로, 무언가를 버릴 시점에선 버리고 배울 시점에선 배우자는 이야기이다. IT는 그 어느 업계보다 변화가 빠르기에, 경쟁력을 갖추기 위해 중요한 것은 빠르게 변화하는 ‘유행’ 프레임워크가 아니라, 변화에 빠르게 적응하는 감각과 실력을 갖추는 것이다.&lt;/p&gt; &lt;p&gt;​&lt;/p&gt; &lt;p&gt;얼마 전 구글의 UX 엔지니어 김종민 님께서 메일로 &lt;em&gt;UX 엔지니어는 단지 직종일 뿐, 모든 직종이 새로 만들어지고 사라지듯이 이 또한 지금의 유행에 따른 직종&lt;/em&gt; 이라고 말씀하셨던 게 생각난다. 실제로 김종민 님은 단 한 번도 ‘UX 엔지니어’가 되기 위해 공부한 적이 없다고 한다. 즉 중요한 것은 유행을 뒤쫓는 것이 아니라, 개발에 대한 이해나 디자인 감각처럼 &lt;strong&gt;변하지 않는 것을 익히는 것&lt;/strong&gt;이다. 변하지 않는 것을 파악하면, 다른 직종이 나오더라도 적응할 수 있기 때문이다. 세상에 잘하는 사람들은 참 많은데 그 사람들 중에서 내가 독보적인 사람이 되려면 어떤 부분에 흥미를 느끼고 자신이 있는지가 중요하다는 말씀이, 어찌보면 참 교과서적인 말로 들릴 수도 있지만, 김종민 님께서 살아온 삶에 너무 극명히 드러나있어 내 가치관과 진로관에 와닿는다. 그런 의미에서 나는 이 글에서 찾던 ‘답’을 jQuery Free가 아닌, &lt;em&gt;변하지 않는 것&lt;/em&gt; 이라고 정의내리고 싶다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="javascript"/><category term="jQuery"/><category term="vanillaJS"/><summary type="html">끊임없는 변화 속에서 중요한 것은 변하지 않는 것</summary></entry><entry><title type="html">광고시장의 변화 - 퍼포먼스 마케팅과 인플루언서 마케팅</title><link href="http://localhost:4000/2017/12/influencer.html" rel="alternate" type="text/html" title="광고시장의 변화 - 퍼포먼스 마케팅과 인플루언서 마케팅"/><published>2017-12-22T21:15:30+09:00</published><updated>2017-12-22T21:15:30+09:00</updated><id>http://localhost:4000/2017/12/influencer</id><content type="html" xml:base="http://localhost:4000/2017/12/influencer.html">&lt;h4&gt;&lt;b&gt;광고단가와 측정가능매체&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;1. CPM (Cost Per Mille)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;전통적 방식 마케팅&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;Mille은 언뜻 보면 영어의 Million과 같은 어원으로 착각하기 쉽지만 사실 라틴어로 1000을 의미하는 수사이다. 따라서 CPM은 Cost per 1000 impressions, 즉 &lt;em&gt;광고를 1000회 노출 시키는 데 지불할 비용&lt;/em&gt;을 뜻한다.&lt;/li&gt; &lt;li&gt;이처럼 단순 조회수에 기반한 CPM은 전통적 방식의 마케팅이다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;예: TVC (TV Commercial)&lt;/strong&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;2. CPC (Cost Per Click)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;퍼포먼스 지향 마케팅&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;클릭 당 지불 비용. 넓게 보면 CPC도 CPA의 일종으로 볼 수도 있겠지만, 보통 CPA의 Action은 클릭 이후의 행위를 가리킨다. 또한 광고 과금방식이 CPM -&amp;gt; CPC -&amp;gt; CPA 순으로 진화해왔다면, 아직까지 온라인 광고는 매체의 선호에 의해 CPC 방식을 주로 사용하고 있기에, CPA의 소분류보다는 독립적인 대분류로 본다.&lt;/li&gt; &lt;li&gt;클릭이라는 실질적 아웃풋에 기반한 CPC는 퍼포먼스 지향 마케팅이다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;예: 구글 AdWords의 Dynamic Pricing&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;구글은 어찌보면 하나의 거대한 크롤러이다. 구글은 크롤러가 수집한 웹페이지의 데이터를 가공하여 ‘인덱싱’한 후, &lt;a href=&quot;https://sungmooncho.com/2012/08/26/pagerank/&quot;&gt;페이지랭크(Page Rank)&lt;/a&gt;에 기반한 알고리즘에 의해 검색결과를 띄워준다. 이때 사용자가 검색한 검색 ‘키워드’가 바로 AdWords의 판매상품이 되는 것이다. 구글은 단지 클릭 수에 비례하여 광고 단가를 책정하지 않고, 이 ‘키워드’의 가치에 따라 동적으로 가격을 책정하는 동적 가격전략(Dynamic Pricing)을 쓰고 있다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;3. CPA (Cost Per Action)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;퍼포먼스 지향 마케팅&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;실제 Action, 즉 실질적 아웃풋에 기반한 CPA는 전통적 방식의 마케팅과 대조되는 퍼포먼스 마케팅 영역에 속한다. 대부분의 광고주가 선호하는 과금 방식.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Action의 종류&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;CPI (Cost Per Installation) : 앱 설치&lt;/li&gt; &lt;li&gt;CPE (Cost Per Engagement) : 앱 실행&lt;/li&gt; &lt;li&gt;CPS (Cost Per Sale) : 구매&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;h4&gt;&lt;b&gt;인플루언서 마케팅&lt;/b&gt;&lt;/h4&gt; &lt;figure&gt; ​ &lt;img src=&quot;http://localhost:4000/assets/img/171222/influencer.png&quot; alt=&quot;인플루언서&quot; /&gt; ​ &lt;figcaption&gt;인플루언서는 기존 광고 시장 주체들의 경계를 허문다.&lt;/figcaption&gt; &lt;/figure&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;인플루언서란?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;인플루언서(Influencer)란, 말 그대로 영향력 있는 개인을 의미하며 연예인, 이슈 메이커, 소셜스타 등을 포괄한다. &lt;strong&gt;크리에이터(Creator)&lt;/strong&gt;라는 용어도 유사한 의미로 사용되는데, 콘텐츠를 제작하고 주로 SNS를 통해 영향을 미치는 인물로 범위가 좁혀진다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;기존 광고와의 차이점&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;인플루언서를 이용한 마케팅은 기존의 광고 시장에서 벗어나 새로운 시장을 형성하고 있는데, 이는 인플루언서 광고가 가지는 전통적 광고와의 차이 때문이다. 이들은 광고 제작자이자 셀럽이며 유통 매체이다. 물론 페이스북, 유튜브, 인스타그램 등 상위매체가 존재하지만 기본적으로 광고가 게재되는 곳은 해당 플랫폼에서 인플루언서 개인이 가진 페이지이다. 결국 &lt;a href=&quot;/공부/경영학/2017/11/19/nasmedia.html&quot;&gt;전통적 시장에서는 미디어, 미디어 랩사, 에이전시, 그리고 광고 모델이 수행하던 역할&lt;/a&gt;을 거의 대부분 소화해내는 것이다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;인플루언서 마케팅의 전망&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;인플루언서 마케팅은 한국의 온라인 마케팅에서 새로운 트렌드로 자리잡고 있다. 불특정 다수를 팬덤으로 보유한 셀러브리티 마케팅과는 달리, 인플루언서 마케팅은 스포츠, 패션, 애완동물 애호가 등의 세분된 타깃 집단을 공략할 수 있으며, 적은 예산으로 린(lean)한 고객 개발을 위한 실질적 프로세스를 제공한다는 측면에서 주목할만하다.&lt;/p&gt; &lt;p&gt;실제로 해외에서는 이미 대기업이 인플루언서 MCN 또는 에이전시를 인수한 사례가 여럿 있다. Disney는 Maker를, Warner Bros.는 Machinima를, Dreamworks는 AwesomenessTV를, 그리고 Google은 Famebit을 인수했다. 국내 MCN이나 에이전시의 경우 투자유치 사례는 많지만 아직까지 대기업이 인수한 사례는 없는데, 곧 이런 사례가 나오지 않을까 싶다.&lt;/p&gt; &lt;p&gt;물론 긍정적인 전망만 있는 것은 아니다. 인플루언서가 점차 늘어나면서 대중은 노출에 무뎌지기 시작했고 인플루언서는 차별화를 위해 이전보다 노력해야 한다. 예컨대 ‘숙제’라는 단어가 등장했는데, 이는 인플루언서가 특정 제품이나 서비스를 노출해도 광고라는 것을 인지하고 야유를 던지는 상황에서 사용된다. 이와 같이 인플루언서 마케팅 시장의 성장은 매력적인 기회이지만, 어떤 모델로 접근해야 할지에 대한 고민은 계속해서 필요할 것이다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;p&gt;&lt;strong&gt;참조&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.forbes.com/sites/kylewong/2014/09/10/the-explosive-growth-of-influencer-marketing-and-what-it-means-for-you/#1146199252ac&quot;&gt;The Explosive Growth of Influencer Marketing and What It Means For You&lt;/a&gt;, Forbes, 2014.09.10.&lt;br /&gt;&lt;a href=&quot;https://brunch.co.kr/@yogathumb/18&quot;&gt;인플루언서에 대한 몇 가지 정의들&lt;/a&gt;, 네안데르탈인, 2017.02.01.&lt;br /&gt;그리고 미나언니&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="광고"/><category term="인플루언서"/><category term="퍼포먼스마케팅"/><summary type="html">광고단가와 측정가능매체</summary></entry><entry><title type="html">StackOverFlow에 Example Code를 첨부해야하는 또다른 이유</title><link href="http://localhost:4000/2017/11/stackoverflow.html" rel="alternate" type="text/html" title="StackOverFlow에 Example Code를 첨부해야하는 또다른 이유"/><published>2017-11-21T21:15:30+09:00</published><updated>2017-11-21T21:15:30+09:00</updated><id>http://localhost:4000/2017/11/stackoverflow</id><content type="html" xml:base="http://localhost:4000/2017/11/stackoverflow.html">&lt;p&gt;&lt;strong&gt;Safari에서 animation-play-state 버그 디버깅하기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;StackOverFlow에 질문을 할 때, Preview 코드를 첨부하지 않으면 -1를 받기 십상이다. 반드시 StackOverFlow에 있는 &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;Example Code 작성법 포스팅&lt;/a&gt;을 참고하여 Minimal, Complete, and Verifiable Example, 소위 MCVE를 함께 첨부하고, 사전에 리서치를 충분히 했다는 인상을 확실히 남겨주어야 한다. 가장 큰 이유는 이런 노력을 통해 Reputation 점수를 확보하지 않으면 이용할 수 있는 기능이 굉장히 제한되기 때문이다. 특히 인상깊었던 제한 정책 중 하나는 StackOverFlow가 질문글에 달 수 있는 태그까지 Reputation 점수에 따라 차별화시킨다는 것. 더 구체적이고 전문적인 태그를 달수록 질 좋은 답변이 달릴 확률이 높아지기 때문에, 논리적으로 충분히 차별화 포인트가 된다.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*ZkkpjuqrWTVNPxGqRR-CHQ.png&quot; alt=&quot;StackOverFlow 질문의 Reputation 점수와 Example Code 예시&quot; /&gt; &lt;figcaption&gt; StackOverFlow 질문의 Reputation 점수와 Example Code 예시 &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;하지만 내가 이 글에서 말하고자 하는 바는 Reputation 외에도 Example Code가 유용한 또다른 이유이다. 바로 Full Code를 StackOverFlow에서 요구하는 대로 Minimal, Complete, and Verifiable하게 바꾸는 과정에서 답을 찾기가 쉽기 때문. 즉 &lt;strong&gt;질문을 올리기 전에 질문을 쓰는 과정에서 답을 스스로 찾게 되는 것&lt;/strong&gt;이다. 필요 없다고 생각이 드는 부분을 하나씩 지워나가면서 코드 리뷰를 하게 되고 그 과정에서 문제를 일으키는 부분이 눈에 들어올 때가 많다.&lt;/p&gt; &lt;p&gt;나의 경우 포트폴리오 웹을 만들면서 Three.js 없이 CSS3 3d Transform만으로 3d animation을 구현하려 이것저것 시도를 많이 했는데, IE는 당연하지만 유난히 Safari에서 알 수 없는 에러가 굉장히 많았다. JS로 한 요소의 transform 값을 바꾸니 자꾸만 괴상한 자리로 가는 것이다. 심지어 Inspector조차 element를 선택하면 올바른 자리에 있다고 말하고, 콘솔에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;getComputedStyle&lt;/code&gt; 을 이용해봐도 올바른 값을 가지고 있다고 이야기해 도저히 디버깅을 할 수가 없었다.&lt;/p&gt; &lt;p&gt;그래서 StackOverFlow에 질문글을 올리기로 결심했고, 방대한 양의 코드를 전부 첨부할 수는 없으니 질문의 핵심이 되는 코드만 남겨두고 다른 코드를 하나씩 정리하기 시작했다. 그런데 웬걸, &lt;code class=&quot;highlighter-rouge&quot;&gt;animation-play-state: paused&lt;/code&gt; 가 있던 줄을 삭제하니 완벽하게 워킹하는 것이다. 처음에는 SCSS 컴파일러를 없앤 타이밍에 제대로 작동하기 시작해서 SCSS 컴파일러 문제인 줄 알았다. 하지만 조금 더 코드를 살펴보니 Safari에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: rotateY()&lt;/code&gt; 값과 &lt;code class=&quot;highlighter-rouge&quot;&gt;animation-play-state: paused&lt;/code&gt; 가 conflict를 일으키는 모양이다. 또 &lt;code class=&quot;highlighter-rouge&quot;&gt;.getComputedStyle&lt;/code&gt; 과 &lt;code class=&quot;highlighter-rouge&quot;&gt;.getPropertyValue&lt;/code&gt; 로 리턴되는 transform matrix가 keyframes animation으로 바뀐 transform 값이 아닌 element에 적용된 본래의 transform 값이다. 이때문에 결국 safari에선 animation이 smooth하지 않지만 (하려면 할 수 있겠으나 코드를 더럽히기도 싫고 귀찮다…) 어찌 됐든 전혀 다른 position을 가지게 되던 큰 문제는 해결되었다.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;http://localhost:4000/assets/img/171121/bug1.png&quot; alt=&quot;Safari Animation-play-state 버그&quot; /&gt; &lt;img src=&quot;http://localhost:4000/assets/img/171121/bug2.png&quot; alt=&quot;Safari Animation-play-state 버그 - 콘솔&quot; /&gt; &lt;figcaption&gt; Safari에서 발생하는 Animation-play-state 버그 (Console에 뜨는 위치값과 브라우저 상에 렌더링되는 위치가 전혀 다른 것을 확인할 수 있다.) &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;이런 브라우저 호환성 이슈들은 참 태클하기 싫은 어려운 문제다. 아래 깃헙 스크린샷을 보면 Mobile Compatibility 테스팅하다가 분노에 휩싸인 나의 커밋 메시지를 볼 수 있다. 특히 크롬에서 완벽하게 작동하는 것을 확인한 채 뿌듯한 마음으로 모바일 브라우저를 켰을 때 괴상한 광경을 목격한 순간의 감정은 말로 표현할 수 없다. 아래는 내가 당시 느낀 그 감정을 듬뿍 담아 작성했던 커밋 메시지 내역이다.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;http://localhost:4000/assets/img/171121/commit.png&quot; alt=&quot;분노의 Commit 내역&quot; /&gt; &lt;figcaption&gt; 분노의 Commit 내역 &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;그럼에도 불구하고 디버깅이 즐거운 것은, 이 모든 에러를 해결하고 나면 극도의 쾌감을 맛볼 수 있기 때문이다. 더 많은 분노를 일으킨 버그였을 수록 해결되었을 때 더 높은 쾌감을 선사한다. 뭐 개발이 아니라 그 어떤 일도 마찬가지이로 시행착오가 있을 때, 일을 마무리짓고 나면 결과물에 대한 애정과 보람이 더 크지 않나 싶다. 아무튼 내 포트폴리오 웹은 이런 식으로 완성이 되었다. 결과적으로 돌이켜보면 고집부리지 말고 유료 플러그인이나 three.js 같은 라이브러리 가져다 쓰는 게 현명했던 것 같기도 하지만, 어찌되었든 다양한 고민을 안겨준 즐거운 시간이었다.&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="StackOverFlow"/><category term="커뮤니티"/><category term="브라우저호환성"/><summary type="html">Safari에서 animation-play-state 버그 디버깅하기</summary></entry><entry><title type="html">미국 교환학생 후기 - 목표편</title><link href="http://localhost:4000/2017/11/exchange-goal.html" rel="alternate" type="text/html" title="미국 교환학생 후기 - 목표편"/><published>2017-11-20T12:15:30+09:00</published><updated>2017-11-20T12:15:30+09:00</updated><id>http://localhost:4000/2017/11/exchange-goal</id><content type="html" xml:base="http://localhost:4000/2017/11/exchange-goal.html">&lt;p&gt;&lt;strong&gt;나는 왜 2학년 2학기에 미국 교환학생을 가기로 선택했는가&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;들어가기에 앞서 우선 제가 교환학생을 간 이유를 곱씹어보고자 합니다. 국제협력본부에서 주관하는 중앙 교환학생 프로그램은 미국을 선택할 경우 최소 3학년 1학기부터 다녀올 수 있게 되어있습니다. 경영대 교환학생 프로그램의 경우 학기 제한이 아닌 전공 학점 수 제한이라, 전공 과목을 몰아 들으니 조건을 충족할 수 있었지만, 여전히 가고 싶었던 미 서부 지역의 학교들은 고학년을 선호한다는 어려움이 있었습니다. 또 개인적인 사정으로 교환학생을 미룰 만한 이유가 여럿 생기기도 했습니다. 그럼에도 불구하고 어렵게 어렵게 2학년 2학기에 미국으로 교환학생을 다녀온 것은 다음과 같은 이유에서입니다.&lt;/p&gt; &lt;p&gt;저는 &lt;em&gt;한국에서는 학점이라든지 인간관계라든지 자꾸만 새로운 우선순위가 생겨 하지 못했던 일들&lt;/em&gt;을 비교적 여유로운 교환학생 기간 동안 해결하고자 하였습니다. 즉 늘 머릿속으로만 해야지 생각하고 실천은 못하던 것들을 하나씩 일부분이라도 행동으로 옮기는 것입니다. 그리고 이는 교환학생 기간이 &lt;em&gt;비교적 여유로워야 한다&lt;/em&gt;는 전제 하에 가능한 것이기에, 최대한 일찍 여유가 많은 저학년 때 이와 같은 시기를 가지고 싶었던 것입니다. 이러한 목적 하에 저는 다음 네 가지를 파견 기간 동안의 이정표로 삼았습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;그간 해온 것과 앞으로 해야할 것을 정리하는 시간 가지기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;최인훈의 소설 ‘광장’에는 ‘&lt;em&gt;사람이 이루어 놓은 것에 눈을 돌리지 않고, 이루어야 할 것에만 눈을 돌리면, 그 자리에서 그는 삶의 힘을 잃는다&lt;/em&gt;.’ 라는 구절이 등장합니다. 늘 이루어야 할 것에만 정신이 팔려 이루어 놓은 것을 제대로 돌아본 적이 없다는 생각에 교환학생 기간 동안에는 그간 해온 것들을 정리하고 포트폴리오를 만들겠다는 계획을 세웠습니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;실리콘밸리 방문 및 선배와의 만남&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;늘 꿈꿔오던 실리콘밸리를 직접 확인하고, 진로를 구체화시키기 위해 실리콘밸리에 계신 한인 동문들을 만나뵙고자 하였습니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;개발 실력 향상&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;매번 우선순위에서 밀려났던 여러 개발 공부를 이번 기회에 제대로 하고자 하였습니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;체력 향상&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;사실 이 목표는 중도에 거의 포기하다시피 해서 적을까 말까 고민을 많이 했는데, 떨어진 체력을 회복하는 것이 또 하나의 중요한 목표였습니다.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;반면 아래 세 가지는 많은 교환학생 친구들이 중요시하는 부분이지만, 저의 경우 &lt;strong&gt;후순위&lt;/strong&gt;로 삼았던 사항입니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;여행&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;저는 ‘세상 방방곡곡을 누비겠어!’식의 욕심은 별로 없는 사람이라, 주변에서 누군가 제안하지 않는 이상 자발적으로 여행을 간 것은 실리콘밸리가 있는 Bay Area 뿐이었습니다. 물론 낯선 곳에서 다양한 사람들과 함께 낭만적인 시간을 보내는 것도 참 좋아하지만,비용과 시간을 고려했을 때 다른 일들이 더 우선시 되었습니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;미국 대학 문화&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;미드에 종종 등장하던 Fraternity/Sorority문화나 Party 문화에 대한 궁금증은 있었으나, 초반에 한두 번 체험만 해봤을 뿐, 지속적으로 참여하진 않았습니다. 프랑스에서 온 제 룸메이트는 완전히 party-person 이었는데, 보면서 미국 대학 문화를 온전히 즐기는 데만 해도 굉장한 체력과 시간과 비용이 필요함을 알 수 있었습니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;학업 성적&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;교환학생 담당자 선생님께는 공부를 열심히 하겠다며 면접을 봤던지라 죄송한 마음이지만, 적어도 파견 기간 동안은 학업 성적에 대한 부담을 버리려 했습니다. 학점관리가 바로 한국에서 끊임없이 발생하던 ‘우선순위’의 대표적인 녀석이며 내가 원하고 내게 더 필요한 공부를 하는 데 오히려 방해된다고 판단했기 때문입니다. 이를 위해 학기 초에 위에서 언급한 개발 실력 향상 용도의 두 과목만 Letter Grade, 나머지는 모두 Pass/Fail로 신청을 했습니다.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;아래는 본격적으로 제가 교환학생 기간 동안 경험했던 것들을 기록한 포스팅들입니다. 전체적으로 앞에서 언급했던 네 가지 이정표가 모든 이야기에 조금씩 다 녹아 있지만, 특별히 관련이 깊은 것을 고르자면, 여행편은 두 번째 목표, 수업편은 세 번째 목표, 요리/운동편은 네 번째 목표, 인턴편은 두세 번째 목표와 특히 연결지을 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://localhost:4000/%EA%B2%BD%ED%97%98/%EA%B5%90%ED%99%98%ED%95%99%EC%83%9D/2017/11/26/exchange-travel.html&quot;&gt;[&lt;strong&gt;여행편&lt;/strong&gt;] 살면서 한 번쯤 꼭 살아보고 싶은 곳: Bay Area&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://localhost:4000/%EA%B2%BD%ED%97%98/%EA%B5%90%ED%99%98%ED%95%99%EC%83%9D/2017/11/27/exchange-internship.html&quot;&gt;[&lt;strong&gt;인턴편&lt;/strong&gt;] 실리콘밸리 스타트업 ‘차트메트릭’에서 인턴을 하다&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://localhost:4000/%EA%B2%BD%ED%97%98/%EA%B5%90%ED%99%98%ED%95%99%EC%83%9D/2017/12/27/exchange-class.html&quot;&gt;[&lt;strong&gt;수업편&lt;/strong&gt;] USC에서 들은 최고의 강의: Interactive Web Development&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://localhost:4000/%EA%B2%BD%ED%97%98/%EA%B5%90%ED%99%98%ED%95%99%EC%83%9D/2017/12/16/exchange-diet.html&quot;&gt;[&lt;strong&gt;요리/운동편&lt;/strong&gt;] 미국에서의 다이어트 도전과 실패&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://localhost:4000/%EA%B2%BD%ED%97%98/%EA%B5%90%ED%99%98%ED%95%99%EC%83%9D/2017/12/16/exchange-club.html&quot;&gt;[&lt;strong&gt;번외편&lt;/strong&gt;] 기숙사, 동아리, 친구들 등 이야기 조각들&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="교환학생"/><category term="미국"/><category term="미서부"/><category term="USC"/><summary type="html">나는 왜 2학년 2학기에 미국 교환학생을 가기로 선택했는가</summary></entry><entry><title type="html">광고시장의 구조 - From Advertiser to Media</title><link href="http://localhost:4000/2017/11/nasmedia.html" rel="alternate" type="text/html" title="광고시장의 구조 - From Advertiser to Media"/><published>2017-11-19T21:15:30+09:00</published><updated>2017-11-19T21:15:30+09:00</updated><id>http://localhost:4000/2017/11/nasmedia</id><content type="html" xml:base="http://localhost:4000/2017/11/nasmedia.html">&lt;h4&gt;&lt;b&gt;한국의 광고 산업 구조&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;작년 9월 즈음, 경영대 학생회에서 진행하는 기업탐방 프로그램으로 광고대행사 &lt;a href=&quot;https://www.nasmedia.co.kr/&quot;&gt;나스미디어&lt;/a&gt;에 다녀온 적이 있다. 당시 이준용 이사님께서 해주셨던 말씀에 살을 붙여 한국 광고 시장 생태계와 전망을 정리해보았다. 많은 인사이트를 주신 이준용 이사님께 감사의 말씀을 전한다.&lt;/p&gt; &lt;figure&gt; ​ &lt;img src=&quot;http://localhost:4000/assets/img/171119/chain.png&quot; /&gt; ​ &lt;figcaption&gt; 기존 한국 광고 시장의 일반적 프로세스 &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;한국 광고시장에서는 일반적으로 위 사진과 같은 프로세스를 따라 광고가 운영된다. 전통적 TVC나 OOP(옥외광고)가 아닌 온라인/모바일 광고 위주로 살펴보도록 하겠다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;광고대행사 (Agency)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;종합광고대행사&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;광고주의 위탁에 의한 시장조사, 광고기획의 수립, 매체의 선택, 광고물제작, 매체와의 광고계약 등을 광고주를 대신해 처리함과 동시에, 매체사에 대한 광고지면·광고시간의 매매행위, 광고요금의 회수업무도 맡고 있다. 예컨대 삼성의 제일기획, 현대의 이노션 월드와이드, LG의 HS Ad, 롯데의 대홍기획 등이 대표적이다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;독립광고대행사(특수대행사)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;광고의 여러 작업 가운데 선택적인 특정 서비스만을 전문적으로 제공하는 대행사. 광고 관련 프리랜서들이 모여 있는 광고 제작 에이전시들이 여기에 속한다. 몇 사람이 하는 소규모 회사들이 대부분이다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;미디어 렙사 (Media Rep.)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;미디어 렙사는 광고주를 대신하여 매체에 광고를 판매하는 회사이다. 대표적으로 KT의 나스미디어와 CJ의 메조미디어를 비롯한 &lt;strong&gt;땡땡미디어 회사들&lt;/strong&gt;이 있고, 이들은 이름처럼 ‘미디어’를 대변한다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;미디어 렙사는 전형적인 &lt;strong&gt;정 회사&lt;/strong&gt; 이다. 광고주와의 계약관계에서 돈을 수령하는 을의 입장이면서, 네이버나 다음카카오와 같은 미디어 회사들에게도 을이기 때문이다. (나스미디어 이사님께서 그래도 을로 살아오면 개인비즈니스를 하더라도 더 끈질기게 잘 살아남는다며 웃으시던 게 기억난다.)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commision Based vs Fee Based&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;한국 광고 시장은 Commision Based 방식으로, 광고주가 지불하는 금액에서 기획 및 제작사가 우선 15~20%를 먹고, 나머지를 대행사에게 준 후 미디어에게 전달되는, 한 마디로 &lt;em&gt;알아서 나눠 가지는 방식&lt;/em&gt;이다.&lt;/p&gt; &lt;p&gt;반면 미국 광고 시장은 Fee Based 방식으로, 광고주는 매체에 돈을 지불하고, 대행사에는 추가적으로 Fee를 준다.&lt;/p&gt; &lt;p&gt;이렇게 지불 방식에 차이가 나는 이유는 한국 광고 생태계 피라미드의 불균형 때문이다. 네이버의 경우 3~4명의 담당자만 있는 반면, 미디어 렙사는 7개가 존재하며, 기획사는 몇 백개, 광고주는 몇 천개가 있다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;매체 (Media)&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;모든 광고는 Big3가 지배한다&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;이사님께서 계속 강조하신 것 중 하나가 ‘모든 광고는 Big3가 지배한다’였다. 한국은 광고 시장 역시 외국 시장보다 독과점 현상이 강하다. 방송이든 신문이든 모바일이든 정상적인 유통구조가 안정화되면 늘 메이저는 3개사에 마이너 1~2개사 정도만 남는 구조라는 것이다. Big5 매체의 매출 비중이 전체 시장의 70% 가까이 차지한다고 한다.&lt;/p&gt; &lt;p&gt;온라인 광고의 경우, Big3로 &lt;strong&gt;네이버, 카카오톡, 유투브&lt;/strong&gt;를 꼽고, 여기에 &lt;strong&gt;페이스북&lt;/strong&gt;을 낄 수도 있다고 말씀하셨다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;이때문에 미디어로 성공하기란 굉장히 어려운 일이다. 월 10억 트래픽이면 월 취급고 10억이다. (취급고란 거래액이 아닌 유통되는 자금을 의미한다. 영업수익으로 표기.) 타겟팅, 신기술 등도 옵션일 뿐, 미디어 산업에선 성공의 핵심이 아니다. 특히 한국은 단일민족이 절반 이상은 수도권의 좁은 영토에 살다 보니 타겟팅의 필요성이 적다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;페이스북&lt;/strong&gt;이 낄 ‘수’도 있다는 데는 사실 반대하는 바이다. 페이스북은 이제 한국에서도 광고 시장을 이끄는 주인공이다. 아무래도 나스미디어가 미디어렙사이다보니 셀프 서비스를 운영하는 페이스북을 과소평가할 수밖에 없었던 듯싶다. 페이스북이 등장했던 초반을 돌이켜보면 나와 지인의 삶을 공유하기 위해 접속하곤 했는데, 이제는 대부분 사람들이 공유하는 컨텐츠를 보러 접속한다. 이는 페이스북이 미디어로의 변신을 성공적으로 추구하고 있다는 반증의 일환이다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;네이버 홈의 대문 배너가 현재 한국 광고 시장에서는 가장 비싼 곳이라고. 더 세부적인 예시로는 점차 동창회로 전락하여 올드해져만 가는 네이버 밴드, 맘스토리나 아기용품 광고에 주로 사용되는 카카오스토리 등 있다고 한다.&lt;/p&gt; &lt;p&gt;​&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;h4&gt;&lt;b&gt;한국 광고 시장의 미래&lt;/b&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;미래는 과거에서 보인다&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;80년대&lt;/strong&gt; - 생산지향적 경영&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;90년대&lt;/strong&gt; - 기획의 시대&lt;/p&gt; &lt;p&gt;마케팅지향적 경영이 막 도입된 시기로, 기획만 잘해주면 성공하던 기획의 시대.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2000년대&lt;/strong&gt; - Creativity의 시대&lt;/p&gt; &lt;p&gt;미디어/매체라 하면 오로지 TV 뿐이었던 시대. 창의적인 카피를 통해 광고하면 성공할 수 있었다. 좋은 카피를 받기 위해 노력하는 사람들이 많았고, 광고 에이전시들이 가장 번성하던 시기이다. 언론 및 미디어 학과를 꿈꾸는 수많은 고등학생들에게 영감이 되었던 광고천재 이제석 씨도 알맞은 시대에 활동했기에 더욱 각광받았다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2010년대&lt;/strong&gt; - Media의 시대&lt;/p&gt; &lt;p&gt;2010년대는 Creativity보다도 Media의 시대로서, 미디어를 활용하는 것이 정말 중요해졌다. 각 영역에 맞는 크리에이티브와 미디어 플래닝이 필요한 것이다. 매체를 전문적으로 다루던 사람들이 안정적인 활동을 이루고 있다. TV의 비중이 감소하고 사람들은 다른 다양한 미디어에 의해 컨텐츠를 감상한다. 이러한 컨텐츠와 기술의 중요성도 무시할 수 없다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2020년대&lt;/strong&gt; - Data의 시대&lt;/p&gt; &lt;p&gt;비단 광고계 뿐만 아니라 다른 산업 전반에도 해당되는 이야기이다. 퍼포먼스 지향 마케팅을 추구하고, 퍼포먼스를 나타낼 지표를 측정할 수 있는 알맞은 데이터를 수집할 수 있어야 한다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;우리나라의 특이점&lt;/p&gt; &lt;ul&gt; &lt;li&gt;우리나라는 &lt;strong&gt;토종 미디어&lt;/strong&gt;가 1위를 하고 있는 특이 케이스. TVC도 물론 비중이 굉장히 감소했으나, 이미 Netflix, Amazon Prime Video가 거의 TV를 대체해버린 외국에 비하면 변화가 완만하다.&lt;/li&gt; &lt;li&gt;건강하지 못한 우리나라 기업 생태계를 생각했을 때, 기존의 틀이 깨지는 데 시간이 굉장히 오래 걸린다. 기득권을 부정하면 벽이 생기고 이를 깨는 것은 늘 어려운 일이겠지만 한국에서는 특히나 더 어렵다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;그럼에도 불구하고 변화는 분명히 온다&lt;/p&gt; &lt;ul&gt; &lt;li&gt;이 포스팅에서 설명한 기존 광고시장의 구조는 점점 무너지고 있다. &lt;a href=&quot;http://localhost:4000/%EA%B3%B5%EB%B6%80/%EA%B2%BD%EC%98%81%ED%95%99/2017/12/22/influencer.html&quot;&gt;전통적 마케팅은 퍼포먼스 지향 마케팅으로 대체되었고, 광고 매체와 광고 대행사, 그리고 미디어 렙사 간의 경계를 허문 인플루언서 광고&lt;/a&gt;가 주목을 받고 있다.&lt;/li&gt; &lt;li&gt;이사님께서는 기존 산업 구조를 부정하면 너무 힘들며, 기존 틀 안에서 현실을 인정하고 자기 것을 만들어나가는 사람이 성공한다고 말씀하셨지만, 나는 조금 다른 의견이다. 광고 시장의 기존 틀은 이미 무너지고 있다. 한국 특성상 변화가 느린 것은 사실이지만, 조금 늦더라도 결국 한국도 주류의 변화를 따라가게 되어 있다. 물론 현실을 아예 부정하고 기득권을 무시하는 어리석은 짓을 말하는 것은 아니다. &lt;em&gt;틀을 깨고 새로운 것을 창조하려 안간힘을 쓰는 것은 어렵지만, 새로운 변화의 물결에 몸을 실으면 저절로 틀은 깨지기 마련이다&lt;/em&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt;</content><author><name>jaeyoon</name></author><category term="광고"/><category term="미디어"/><category term="광고대행사"/><category term="미디어렙사"/><summary type="html">한국의 광고 산업 구조</summary></entry><entry><title type="html">자바 기초 예제 문제 풀이</title><link href="http://localhost:4000/2017/10/java-basics.html" rel="alternate" type="text/html" title="자바 기초 예제 문제 풀이"/><published>2017-10-24T12:15:30+09:00</published><updated>2017-10-24T12:15:30+09:00</updated><id>http://localhost:4000/2017/10/java-basics</id><content type="html" xml:base="http://localhost:4000/2017/10/java-basics.html">&lt;p&gt;&lt;strong&gt;초심으로 돌아가 Java 왕기초 예제 복습/정리하기&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;최대/최소값&lt;/strong&gt; - 습관적으로 &lt;em&gt;0으로 초기화하지 않을 것.&lt;/em&gt;&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0으로 초기화하면 음수 최대값 못 구하는 논리적 결함 생긴다. 밑 i는 0 아닌 1부터 시작해도 됨.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shift&lt;/strong&gt; (한 칸씩 오른쪽으로 이동) - 역순으로 생각하라.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;소수&lt;/strong&gt; - 2, 3, …, &lt;em&gt;sqrt(n) 까지 체크&lt;/em&gt; 해보면 됨.&lt;/p&gt; &lt;p&gt;약수가 n/2보다 클 순 없다.&lt;/p&gt; &lt;p&gt;약수란 쌍으로 존재하는 것. 루트n보다 큰 게 있더라도 그 짝꿍은 루트n보다 작을 것. (둘다 루트n보다 클 순 없음.)&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 무죄추정의원칙처럼&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPrime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//break; //더이상돌필요없음&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isPrime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;쌍을 검사&lt;/strong&gt; - &lt;em&gt;반복문 안에 반복문&lt;/em&gt;&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [0,n)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [i,n)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (0,0) (0,1) (0,2) ... (n-2, n-1) (n-1, n-1)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [0,n]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [0,i]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (0,0) (1,0) (1,1) ... (n-1, n-2) (n-1, n-1)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;구간의 합&lt;/strong&gt; - 0개 이상의 연속된 정수들을 더하여 얻을 수 있는 최대값. &lt;em&gt;구간시작점 루프와 구간 끝점 루프 - 반복문 안에 반복문&lt;/em&gt;&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sequence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxSum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//0개이상이므로&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//구간시작점&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//구간끝점&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxSum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxSum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxSum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;응용&lt;/strong&gt; - n개의 음이 아닌 한 자리 정수를 입력받아 배열에 저장한다. 이들 중에서 1개 이상의 연속된 정수들을 붙여(digit으로) 얻을 수 있는 소수들 중에서 최대값을 구하여 출력하는 프로그램을 구현하라&lt;/p&gt; &lt;p&gt;문제점 =&amp;gt; n이 커지면 overflow(int는 2의 31승 정도가 한계) 발생 가능&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Complex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 음이 아닌 정수이므로 &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 구간의 시작점 &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 구간의 끝점 &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// convert digit data into an integer&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 하나의 정수로 환산 &lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// test if it is a prime&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// if yes, compare to the max&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxPrime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxPrime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No Prime&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;스왑(Swap)&lt;/strong&gt; - 자리를 바꿀 때에는 &lt;em&gt;tmp 만들기&lt;/em&gt;&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;정렬(Sort)&lt;/strong&gt; - 데이터를 크기 순으로 재배치. 오름차순(작=&amp;gt;큰)/내림차순(큰=&amp;gt;작) 어떤 순간에 컴퓨터가 실제로 하고 있는 일을 조사해보면 정렬을 하고 있을 확률이 가장 높다. 많은 정렬 알고리즘 존재.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;버블정렬(BubbleSort)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;가장 단순한 형태의 정렬 알고리즘 중 하나. n개의 수 중 &lt;em&gt;제일 큰 값을 찾아 어떻게든 맨 마지막 자리로&lt;/em&gt; 가져옴. 그러고나면 이 값은 잊어버리고 데이터가 n-1개였던 것으로 생각하고 다시 이 과정을 반복한다. 가장 큰 값의 입장만 생각했을 때 맨 마지막으로 갈 수밖에 없도록.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 더 큰 걸 뒤로 이동&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;&lt;strong&gt;끼워넣기(Insert)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;이미 정렬된 배열(ordered list)에 x를 끼워넣을 때, 어디에 끼워넣을지를 찾는 방법은 크게 두 가지이다. 앞에서부터 하나씩 비교하여 x보다 크거나 같은 수를 찾거나, 뒤에서부터 하나씩 비교하여 x보다 작거나 같은 수를 찾는 방법이다. 대칭적이라 유사하다고 볼 수 있지만, 결국 x를 끼워넣고나서 x보다 큰 값들을 한 칸씩 오른쪽으로 이동해야 한다는 것을 고려했을 때, 전자는 x 앞뒤의 모든 수를 건드리는 데 비하여, 후자는 x 뒤의 수만 조사/이동시킨다는 장점이 있다. 따라서 &lt;em&gt;뒤에서부터&lt;/em&gt; 검사를 수행한다.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 새 수보다 크면 한 칸씩 뒤로 이동한다.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// j는 유지된다.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;​&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Ref&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;인프런 권오흠 강사님 https://www.inflearn.com&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="오픈소스"/><category term="커뮤니티"/><category term="OSS"/><category term="Github"/><category term="Dribbble"/><category term="Codepen"/><summary type="html">초심으로 돌아가 Java 왕기초 예제 복습/정리하기</summary></entry><entry><title type="html">JSX의 개념과 기본 문법 소개</title><link href="http://localhost:4000/2017/10/jsx.html" rel="alternate" type="text/html" title="JSX의 개념과 기본 문법 소개"/><published>2017-10-20T12:15:30+09:00</published><updated>2017-10-20T12:15:30+09:00</updated><id>http://localhost:4000/2017/10/jsx</id><content type="html" xml:base="http://localhost:4000/2017/10/jsx.html">&lt;h4&gt;&lt;b&gt;1. 개념&lt;/b&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;소개&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;XML/HTML-like syntax that extends ECMAScript so that XML/HTML-like text can co-exist with JavaScript/React code.&lt;/li&gt; &lt;li&gt;확장자 - .jsx =&amp;gt; .js 사용하는 추세 (fb에서는 .react.js)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;필요성&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;JSX는 컴파일링되면서 최적화되므로 빠르다&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Type-safe&lt;/strong&gt; 하다&lt;/p&gt; &lt;p&gt;어떠한 연산도 정의되지 않은 결과를 내놓지 않는다. 즉 예측 불가능한 결과를 나타내지 않는다. 예컨대 1+”1”의 연산이 가능하다거나, 문자열 변수에 숫자를 할당하는 것이 가능하다거나 하는 것은 일면 비논리적이라고 볼 수 있다. 이러한 비논리를 엄격히 체크하여 runtime 시 이로 인한 오류를 발생하지 않도록 하겠다는 개념이 type-safe.&lt;/p&gt; &lt;p&gt;type-safe한 언어(ex. C#, Java)는 보통 이를 &lt;em&gt;컴파일 과정에서 에러를 감지&lt;/em&gt; 해준다. type-safe하지 않은 언어(ex. JavaScript)는 이를 그냥저냥 처리한다.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;2. 문법&lt;/b&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;XML/HTML-like Syntax&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;따옴표 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt; 로 감싸지 않는다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Container Element&lt;/strong&gt;가 필수적.&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Syntax Error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello Jaeyoon&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Welcome&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// No Error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello Jaeyoon&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Welcome&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JavaScript Expression&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt; 로 wrapping 하면 된다&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;임의 &lt;strong&gt;method&lt;/strong&gt; 생성/사용 - 뒤에 &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; 붙이면 페이지가 로드될 때도 실행되고 클릭할 때도 실행됨&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;if-else 문 사용 불가 - 대신 &lt;strong&gt;ternary&lt;/strong&gt; (conditional operator) 를 사용한다.&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;sayHey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Dev-Server&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello Jaeyoon&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Welcome to &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* wrapping */&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onClick=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHey&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* method */&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'True'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'False'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* ternary */&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Inline Style StyleSheet&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;React의 Inline CSS에서는 string 형식이 사용되지 않고 &lt;strong&gt;key가 camelCase인 Object&lt;/strong&gt;를 사용&lt;/p&gt; &lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'aqua'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'black'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;pStyle&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;I am inline styled&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;주석 다는 법&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{/* comments */}&lt;/code&gt; 형식으로 작성.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;Ref&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;React Official Documentation https://reactjs.org/docs/hello-world.html&lt;br /&gt; Velopert React 강좌 3편 https://velopert.com/867&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="javascript"/><category term="react"/><category term="jsx"/><summary type="html">1. 개념</summary></entry><entry><title type="html">오픈소스와 집단지성의 경이로움에 대하여</title><link href="http://localhost:4000/2017/10/opensource.html" rel="alternate" type="text/html" title="오픈소스와 집단지성의 경이로움에 대하여"/><published>2017-10-11T12:15:30+09:00</published><updated>2017-10-11T12:15:30+09:00</updated><id>http://localhost:4000/2017/10/opensource</id><content type="html" xml:base="http://localhost:4000/2017/10/opensource.html">&lt;p&gt;&lt;strong&gt;드리블(Dribbble)에서 깃헙(Github)까지: Day-Night Switch에 담긴 이야기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;지난 학기 김창희 교수님 경영과학 시간에 냈던 과제물 &lt;a href=&quot;http://jaeyoon.io/lab&quot;&gt;DEA를 통한 OSS의 효율성 분석&lt;/a&gt;에서 나는 &lt;em&gt;오픈소스의 효율성 측면에서 ‘다수의 참여’는 긍정적인 것만은 아니다&lt;/em&gt; 는 결론을 내렸다. 그런데 과제 발표 당시 전달 미스가 있었는지, 이를 오픈소스 자체에 대한 부정적 견해로 오해한 친구가 있었다. 거두절미하고 말하자면 전혀 아니다. 오픈소스의 효율성을 고려했을 때 ‘소수 엘리트 집단의 규제’가 필요하다는 것 뿐이지, 여전히 나는 오픈소스의 팬이며 그 경이로움은 끝이 없다고 믿는다.&lt;/p&gt; &lt;p&gt;StackOverFlow, GitHub, Linux 등등 오픈소스의 대단함을 엿볼 수 있는 멋진 것들이 참 많지만, 오늘은 그 중에서도 디자이너 포트폴리오 사이트인 &lt;a href=&quot;https://dribbble.com&quot;&gt;Dribbble&lt;/a&gt;과 짤막한 소스코드 공유 사이트 &lt;a href=&quot;https://codepen.io&quot;&gt;Codepen&lt;/a&gt;에 중점을 두고 벌어진 이야기를 하나 해보려 한다.&lt;/p&gt; &lt;p&gt;이야기는 2015년 1월 30일, 인도의 한 디자이너 &lt;a href=&quot;http://www.ramakrish.in&quot;&gt;Ramakrishna V&lt;/a&gt;가 &lt;a href=&quot;https://dribbble.com/shots/1907553-Day-Night-Toggle-Button&quot;&gt;Day-Night Toggle Button&lt;/a&gt;이라는 제목의 일러스트레이션을 Dribbble에 업로드하는 데서부터 시작된다.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;https://cdn.dribbble.com/users/484057/screenshots/1907553/day-night-toggle_1x.jpg&quot; alt=&quot;Static한 Day-Night Toggle Button&quot; /&gt; &lt;figcaption&gt; Static한 Day-Night Toggle Button &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;iOS 토글 버튼에 낮과 밤이라는 컨셉을 입힌 귀여운 아이디어이다. 이는 순식간에 드리블 사이트 Popular 코너에 이름을 올리며 많은 사람들로부터 뜨거운 반응을 얻는다.&lt;/p&gt; &lt;p&gt;다음날, New York 브루클린의 디자이너 &lt;a href=&quot;http://tsurieldesign.com&quot;&gt;Tsuriel&lt;/a&gt;은 이에 After Effects로 애니메이션을 넣은 GIF 버전을 드리블에 업로드한다. 이 애니메이션 역시 뜨거운 반응을 얻었고, 지금은 Day Night Switch를 검색했을 때 Ramakrishna V가 작업한 최초 게시물보다도 오히려 먼저 나온다.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;https://cdn.dribbble.com/users/470545/screenshots/1909289/switch_02.gif&quot; alt=&quot;Ramakrishna V의 애니메이션&quot; /&gt; &lt;figcaption&gt; Ramakrishna V의 애니메이션 &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;또 이번에는 미국 Minnesota 주에 사는 &lt;a href=&quot;https://twitter.com/In_finiteloop&quot;&gt;Jason Dicks&lt;/a&gt;는 이를 Pure CSS로 구현한 Codepen을 만들어 올린다.&lt;/p&gt; &lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;qEXzOQ&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;jsndks&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Pure CSS Day/Night Toggle Swith&quot; class=&quot;codepen&quot;&gt;Jason Dicks가 구현한 Day-Night Toggle Button &lt;a href=&quot;https://codepen.io/jsndks/pen/qEXzOQ/&quot;&gt;Pure CSS Day/Night Toggle Swith&lt;/a&gt; by Jason Dicks (&lt;a href=&quot;https://codepen.io/jsndks&quot;&gt;@jsndks&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt; &lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt; &lt;p&gt;코드를 보면 알 수 있듯이 JavaScript 없이 오직 CSS만으로 애니메이션을 구현했다. 구름, 달 표면의 Crater나 밤하늘의 별들도 모두 이미지가 아닌 CSS이다.&lt;/p&gt; &lt;p&gt;한 달 후, 애니메이션이 아쉬웠던지 영국 런던에 사는 UI 엔지니어 &lt;a href=&quot;http://ashleynolan.co.uk&quot;&gt;Ashley Nolan&lt;/a&gt;이 손 본 코드를 Codepen에 재업로드한다. 이는 아직까지도 ‘CSS Button’을 검색하면 가장 먼저 뜨는 인기 있는 Codepen 게시물 중 하나로 손꼽히고 있다.&lt;/p&gt; &lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;wBppKz&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;ashleynolan&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;A bunch of funky CSS3 Toggle Buttons&quot; class=&quot;codepen&quot;&gt;Ashley Nolan의 Toggle Button 시리즈 &lt;a href=&quot;https://codepen.io/ashleynolan/pen/wBppKz/&quot;&gt;A bunch of funky CSS3 Toggle Buttons&lt;/a&gt; by Ashley Nolan (&lt;a href=&quot;https://codepen.io/ashleynolan&quot;&gt;@ashleynolan&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt; &lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt; &lt;p&gt;1년이 훌쩍 지나고, 2016년 9월, 독일 북부에 사는 iOS 개발자 &lt;a href=&quot;https://github.com/finngaida/DayNightSwitch&quot;&gt;Finn Gaida&lt;/a&gt;는 이를 실제 iOS에 적용할 수 있도록 짠 Swift 프로젝트를 GitHub에 오픈소스로 공개했다.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;http://localhost:4000/assets/img/171011/finn.png&quot; alt=&quot;iOS용 Day-Night Toggle Button&quot; /&gt; &lt;figcaption&gt; iOS용 Day-Night Toggle Button &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;또 런던의 디자이너 &lt;a href=&quot;https://dribbble.com/shots/3617536-Daily-UI-Challenge-015&quot;&gt;Juliana Martinhago&lt;/a&gt;가 Dribbble과 &lt;a href=&quot;https://uplabs.com&quot;&gt;Uplabs&lt;/a&gt; 에 약간 수정된 버전의 애니메이션을 포스팅했고,&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;https://cdn.dribbble.com/users/396527/screenshots/3617536/switch-final.gif&quot; alt=&quot;Juliana Martinhago가 수정한 버전&quot; /&gt; &lt;figcaption&gt; Juliana Martinhago가 수정한 버전 &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;이를 본 이란의 Android 개발자 &lt;a href=&quot;https://github.com/Mahfa/DayNightSwitch&quot;&gt;Mahfa&lt;/a&gt;는 불과 네 달 전, Android 버전 스위치를 GitHub에 공유했다.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;http://localhost:4000/assets/img/171011/mahfa.png&quot; alt=&quot;Android용 Day-Night Toggle Button&quot; /&gt; &lt;figcaption&gt; Android용 Day-Night Toggle Button &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;이렇게 디자이너의 영감이 담긴 Static한 이미지 한 장이 실제 iOS, Android의 스위치로 사용되기까지, 아무런 경제적 유인도 면대면으로 이루어지는 팀워크도 없었다. 3년 전에 올라온 일러스트레이션 하나가 세계 곳곳의 디자이너와 개발자에게 영감이 되어 여러 가지 오픈소스 작품을 생성해낸 것이다.&lt;/p&gt; &lt;p&gt;이 이야기는 내가 웹서핑을 하다가 우연히 발견하게 된 사소한 사례이지만, 똑같은 원리로 사람들은 &lt;a href=&quot;https://github.com/torvalds/linux&quot;&gt;리눅스&lt;/a&gt;를 만들어내고 &lt;a href=&quot;https://github.com/mysql&quot;&gt;MySQL&lt;/a&gt;을 만들어냈다. 앎의 나눔을 아까워하지 않는 오픈소스 문화가 참 좋다.&lt;/p&gt;</content><author><name>jaeyoon</name></author><category term="오픈소스"/><category term="커뮤니티"/><category term="OSS"/><category term="Github"/><category term="Dribbble"/><category term="Codepen"/><summary type="html">드리블(Dribbble)에서 깃헙(Github)까지: Day-Night Switch에 담긴 이야기</summary></entry></feed>